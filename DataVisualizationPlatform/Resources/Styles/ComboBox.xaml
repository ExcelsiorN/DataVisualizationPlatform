<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- ==================== 颜色与阴影资源 ==================== -->
    <SolidColorBrush x:Key="PrimaryColor" Color="#4A90E2"/>
    <SolidColorBrush x:Key="PrimaryDarkColor" Color="#2E5C8A"/>
    <SolidColorBrush x:Key="AccentColor" Color="#5CB85C"/>
    <SolidColorBrush x:Key="BackgroundColor" Color="#F5F7FA"/>
    <SolidColorBrush x:Key="CardBackgroundColor" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="TextPrimaryColor" Color="Black"/>
    <SolidColorBrush x:Key="TextSecondaryColor" Color="#7F8C8D"/>
    <SolidColorBrush x:Key="BorderColor" Color="#E1E8ED"/>
    <SolidColorBrush x:Key="HoverColor" Color="#F8FAFC"/>

    <DropShadowEffect x:Key="ComboBoxHoverShadowEffect" 
                  Color="#4A90E2" 
                  Opacity="0.2" 
                  BlurRadius="8" 
                  ShadowDepth="0"/>


    <!-- ==================== 现代化ComboBox样式 ==================== -->
    <Style x:Key="ModernComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Height" Value="38"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
        <Setter Property="Background" Value="{StaticResource CardBackgroundColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="1"/>

        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="8">
                            <Grid>
                                <!-- ToggleButton 覆盖整个区域 -->
                                <ToggleButton x:Name="DropDownToggle"
                                      Focusable="False"
                                      ClickMode="Press"
                                      Background="Transparent"
                                      BorderThickness="0"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Grid Background="Transparent">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>

                                                <!-- 下拉箭头 -->
                                                <Path Grid.Column="1"
                                              x:Name="Arrow"
                                              Data="M 0 0 L 4 4 L 8 0 Z"
                                              Fill="{StaticResource TextSecondaryColor}"
                                              Margin="0,0,12,0"
                                              VerticalAlignment="Center"
                                              RenderTransformOrigin="0.5,0.5">
                                                    <Path.RenderTransform>
                                                        <RotateTransform x:Name="ArrowRotate" Angle="0"/>
                                                    </Path.RenderTransform>
                                                </Path>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <!-- 展开时箭头旋转动画 -->
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="ArrowRotate"
                                                                       Storyboard.TargetProperty="Angle"
                                                                       To="180"
                                                                       Duration="0:0:0.2">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <CubicEase EasingMode="EaseOut"/>
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="ArrowRotate"
                                                                       Storyboard.TargetProperty="Angle"
                                                                       To="0"
                                                                       Duration="0:0:0.2">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <CubicEase EasingMode="EaseOut"/>
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>

                                <!-- 显示选中项（关键：IsHitTestVisible="False" 不阻挡点击） -->
                                <ContentPresenter x:Name="ContentSite"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          IsHitTestVisible="False"/>

                                <!-- 下拉弹出菜单 -->
                                <Popup x:Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                    <Border Background="{StaticResource CardBackgroundColor}"
                                    BorderBrush="{StaticResource BorderColor}"
                                    BorderThickness="1"
                                    CornerRadius="8"
                                    Margin="0,4,0,0"
                                    MinWidth="{TemplateBinding ActualWidth}">
                                        <Border.Effect>
                                            <DropShadowEffect Color="#000000" 
                                                      Opacity="0.15" 
                                                      BlurRadius="15" 
                                                      ShadowDepth="5" 
                                                      Direction="270"/>
                                        </Border.Effect>
                                        <ScrollViewer MaxHeight="200" 
                                              VerticalScrollBarVisibility="Hidden"
                                              Padding="4">
                                            <ItemsPresenter/>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                            <Setter TargetName="Border" Property="Effect" Value="{StaticResource ComboBoxHoverShadowEffect}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- ==================== ComboBox下拉项样式 ==================== -->
    <Style x:Key="ModernComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Height" Value="36"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="Border"
                    Background="{TemplateBinding Background}"
                    BorderThickness="0"
                    CornerRadius="6"
                    Margin="2"
                    Padding="{TemplateBinding Padding}">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- 悬停效果 -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#F5F5F5"/>
                        </Trigger>
                        <!-- 选中效果 -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#E3F2FD"/>
                            <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
                            <Setter Property="FontWeight" Value="SemiBold"/>
                        </Trigger>
                        <!-- 选中且悬停 -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PrimaryColor}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>